{
	"id": "3ed66e431f7e83e97dcdd569dbf06bf4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.0",
	"solcLongVersion": "0.5.0+commit.1d4f565a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/testOverflow.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.5.0;\r\n\r\ncontract testOverflow {\r\n    function add1() public pure returns (uint8) {\r\n        uint8 x = 200;\r\n        uint8 y = x*2;\r\n        return y;\r\n    }\r\n\r\n    function add2() public pure returns (uint8){\r\n        uint8 i = 240;\r\n        uint8 j = 1;\r\n        uint8 k = i + j;\r\n        return k;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/testOverflow.sol": {
				"testOverflow": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "add1",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "add2",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/testOverflow.sol\":60:361  contract testOverflow {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/testOverflow.sol\":60:361  contract testOverflow {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/testOverflow.sol\":60:361  contract testOverflow {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x35921a\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x6c1f222f\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/testOverflow.sol\":89:208  function add1() public pure returns (uint8) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_4\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_4:\n        /* \"contracts/testOverflow.sol\":89:208  function add1() public pure returns (uint8) {\r... */\n      pop\n      tag_5\n      jump(tag_6)\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/testOverflow.sol\":216:358  function add2() public pure returns (uint8){\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"contracts/testOverflow.sol\":216:358  function add2() public pure returns (uint8){\r... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/testOverflow.sol\":89:208  function add1() public pure returns (uint8) {\r... */\n    tag_6:\n        /* \"contracts/testOverflow.sol\":126:131  uint8 */\n      0x0\n        /* \"contracts/testOverflow.sol\":144:151  uint8 x */\n      dup1\n        /* \"contracts/testOverflow.sol\":154:157  200 */\n      0xc8\n        /* \"contracts/testOverflow.sol\":144:157  uint8 x = 200 */\n      swap1\n      pop\n        /* \"contracts/testOverflow.sol\":168:175  uint8 y */\n      0x0\n        /* \"contracts/testOverflow.sol\":180:181  2 */\n      0x2\n        /* \"contracts/testOverflow.sol\":178:179  x */\n      dup3\n        /* \"contracts/testOverflow.sol\":178:181  x*2 */\n      mul\n        /* \"contracts/testOverflow.sol\":168:181  uint8 y = x*2 */\n      swap1\n      pop\n        /* \"contracts/testOverflow.sol\":199:200  y */\n      dup1\n        /* \"contracts/testOverflow.sol\":192:200  return y */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/testOverflow.sol\":89:208  function add1() public pure returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/testOverflow.sol\":216:358  function add2() public pure returns (uint8){\r... */\n    tag_9:\n        /* \"contracts/testOverflow.sol\":253:258  uint8 */\n      0x0\n        /* \"contracts/testOverflow.sol\":270:277  uint8 i */\n      dup1\n        /* \"contracts/testOverflow.sol\":280:283  240 */\n      0xf0\n        /* \"contracts/testOverflow.sol\":270:283  uint8 i = 240 */\n      swap1\n      pop\n        /* \"contracts/testOverflow.sol\":294:301  uint8 j */\n      0x0\n        /* \"contracts/testOverflow.sol\":304:305  1 */\n      0x1\n        /* \"contracts/testOverflow.sol\":294:305  uint8 j = 1 */\n      swap1\n      pop\n        /* \"contracts/testOverflow.sol\":316:323  uint8 k */\n      0x0\n        /* \"contracts/testOverflow.sol\":330:331  j */\n      dup2\n        /* \"contracts/testOverflow.sol\":326:327  i */\n      dup4\n        /* \"contracts/testOverflow.sol\":326:331  i + j */\n      add\n        /* \"contracts/testOverflow.sol\":316:331  uint8 k = i + j */\n      swap1\n      pop\n        /* \"contracts/testOverflow.sol\":349:350  k */\n      dup1\n        /* \"contracts/testOverflow.sol\":342:350  return k */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/testOverflow.sol\":216:358  function add2() public pure returns (uint8){\r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820aca8ab6618a6cf334ebeaadc83964ec5d5c807d71c59a63d39f04041b4508de70029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610109806100206000396000f3fe6080604052600436106048576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806235921a14604d5780636c1f222f14607b575b600080fd5b348015605857600080fd5b50605f60a9565b604051808260ff1660ff16815260200191505060405180910390f35b348015608657600080fd5b50608d60c0565b604051808260ff1660ff16815260200191505060405180910390f35b60008060c890506000600282029050809250505090565b60008060f09050600060019050600081830190508093505050509056fea165627a7a72305820aca8ab6618a6cf334ebeaadc83964ec5d5c807d71c59a63d39f04041b4508de70029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x48 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH3 0x35921A EQ PUSH1 0x4D JUMPI DUP1 PUSH4 0x6C1F222F EQ PUSH1 0x7B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5F PUSH1 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8D PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC8 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 MUL SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF0 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xac 0xa8 0xab PUSH7 0x18A6CF334EBEAA 0xdc DUP4 SWAP7 0x4e 0xc5 0xd5 0xc8 SMOD 0xd7 SHR MSIZE 0xa6 RETURNDATASIZE CODECOPY CREATE BLOCKHASH COINBASE 0xb4 POP DUP14 0xe7 STOP 0x29 ",
							"sourceMap": "60:301:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:301:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106048576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806235921a14604d5780636c1f222f14607b575b600080fd5b348015605857600080fd5b50605f60a9565b604051808260ff1660ff16815260200191505060405180910390f35b348015608657600080fd5b50608d60c0565b604051808260ff1660ff16815260200191505060405180910390f35b60008060c890506000600282029050809250505090565b60008060f09050600060019050600081830190508093505050509056fea165627a7a72305820aca8ab6618a6cf334ebeaadc83964ec5d5c807d71c59a63d39f04041b4508de70029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x48 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH3 0x35921A EQ PUSH1 0x4D JUMPI DUP1 PUSH4 0x6C1F222F EQ PUSH1 0x7B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x5F PUSH1 0xA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8D PUSH1 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC8 SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 MUL SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xF0 SWAP1 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP INVALID LOG1 PUSH6 0x627A7A723058 KECCAK256 0xac 0xa8 0xab PUSH7 0x18A6CF334EBEAA 0xdc DUP4 SWAP7 0x4e 0xc5 0xd5 0xc8 SMOD 0xd7 SHR MSIZE 0xa6 RETURNDATASIZE CODECOPY CREATE BLOCKHASH COINBASE 0xb4 POP DUP14 0xe7 STOP 0x29 ",
							"sourceMap": "60:301:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:119;;8:9:-1;5:2;;;30:1;27;20:12;5:2;89:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;216:142;;8:9:-1;5:2;;;30:1;27;20:12;5:2;216:142:0;;;;;;;;;;;;;;;;;;;;;;;;;;;89:119;126:5;144:7;154:3;144:13;;168:7;180:1;178;:3;168:13;;199:1;192:8;;;;89:119;:::o;216:142::-;253:5;270:7;280:3;270:13;;294:7;304:1;294:11;;316:7;330:1;326;:5;316:15;;349:1;342:8;;;;;216:142;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "53000",
								"executionCost": "105",
								"totalCost": "53105"
							},
							"external": {
								"add1()": "248",
								"add2()": "281"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "MSTORE"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "POP"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "DUP1"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "CODECOPY"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 60,
									"end": 361,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820aca8ab6618a6cf334ebeaadc83964ec5d5c807d71c59a63d39f04041b4508de70029",
									".code": [
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "LT"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "DIV"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "35921A"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "6C1F222F"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "EQ"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "JUMPI"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 361,
											"name": "REVERT"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "POP"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "JUMP"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "MLOAD"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "AND"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "AND"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "DUP2"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "MSTORE"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "ADD"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "POP"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "POP"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "MLOAD"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "DUP1"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "SWAP2"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "SUB"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "SWAP1"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "RETURN"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "JUMP"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "DUP3"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "AND"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "AND"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "DUP2"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "MSTORE"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "ADD"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "POP"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "MLOAD"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "DUP1"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "SWAP2"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "SUB"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "RETURN"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "JUMPDEST"
										},
										{
											"begin": 126,
											"end": 131,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 144,
											"end": 151,
											"name": "DUP1"
										},
										{
											"begin": 154,
											"end": 157,
											"name": "PUSH",
											"value": "C8"
										},
										{
											"begin": 144,
											"end": 157,
											"name": "SWAP1"
										},
										{
											"begin": 144,
											"end": 157,
											"name": "POP"
										},
										{
											"begin": 168,
											"end": 175,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 180,
											"end": 181,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP3"
										},
										{
											"begin": 178,
											"end": 181,
											"name": "MUL"
										},
										{
											"begin": 168,
											"end": 181,
											"name": "SWAP1"
										},
										{
											"begin": 168,
											"end": 181,
											"name": "POP"
										},
										{
											"begin": 199,
											"end": 200,
											"name": "DUP1"
										},
										{
											"begin": 192,
											"end": 200,
											"name": "SWAP3"
										},
										{
											"begin": 192,
											"end": 200,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 200,
											"name": "POP"
										},
										{
											"begin": 192,
											"end": 200,
											"name": "POP"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "SWAP1"
										},
										{
											"begin": 89,
											"end": 208,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "JUMPDEST"
										},
										{
											"begin": 253,
											"end": 258,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 270,
											"end": 277,
											"name": "DUP1"
										},
										{
											"begin": 280,
											"end": 283,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": 270,
											"end": 283,
											"name": "SWAP1"
										},
										{
											"begin": 270,
											"end": 283,
											"name": "POP"
										},
										{
											"begin": 294,
											"end": 301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 305,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 294,
											"end": 305,
											"name": "SWAP1"
										},
										{
											"begin": 294,
											"end": 305,
											"name": "POP"
										},
										{
											"begin": 316,
											"end": 323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 330,
											"end": 331,
											"name": "DUP2"
										},
										{
											"begin": 326,
											"end": 327,
											"name": "DUP4"
										},
										{
											"begin": 326,
											"end": 331,
											"name": "ADD"
										},
										{
											"begin": 316,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 316,
											"end": 331,
											"name": "POP"
										},
										{
											"begin": 349,
											"end": 350,
											"name": "DUP1"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "SWAP4"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "POP"
										},
										{
											"begin": 342,
											"end": 350,
											"name": "POP"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "SWAP1"
										},
										{
											"begin": 216,
											"end": 358,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"add1()": "0035921a",
							"add2()": "6c1f222f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"add1\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"add2\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/testOverflow.sol\":\"testOverflow\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/testOverflow.sol\":{\"keccak256\":\"0xcbe60e6bf104637b48621d56cf2e4bf3c9e27a94cf7d71448c782a06b90a93e2\",\"urls\":[\"bzzr://049cd20883c261b3cd7c44ab16cfe3899253c22ecb6196220d2cdd210eaf949b\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/testOverflow.sol": {
				"ast": {
					"absolutePath": "contracts/testOverflow.sol",
					"exportedSymbols": {
						"testOverflow": [
							42
						]
					},
					"id": 43,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 42,
							"linearizedBaseContracts": [
								42
							],
							"name": "testOverflow",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "133:75:0",
										"statements": [
											{
												"assignments": [
													7
												],
												"declarations": [
													{
														"constant": false,
														"id": 7,
														"name": "x",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "144:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 6,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "144:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 9,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "323030",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "154:3:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200_by_1",
														"typeString": "int_const 200"
													},
													"value": "200"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "144:13:0"
											},
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"name": "y",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "168:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 10,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "168:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 15,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 12,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "178:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "180:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "178:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "168:13:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 16,
													"name": "y",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "199:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 5,
												"id": 17,
												"nodeType": "Return",
												"src": "192:8:0"
											}
										]
									},
									"documentation": null,
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "102:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "126:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "126:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "125:7:0"
									},
									"scope": 42,
									"src": "89:119:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "259:99:0",
										"statements": [
											{
												"assignments": [
													25
												],
												"declarations": [
													{
														"constant": false,
														"id": 25,
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "270:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 24,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "270:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 27,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "323430",
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "280:3:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_240_by_1",
														"typeString": "int_const 240"
													},
													"value": "240"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "270:13:0"
											},
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"name": "j",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "294:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 28,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 31,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "31",
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "304:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1_by_1",
														"typeString": "int_const 1"
													},
													"value": "1"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "294:11:0"
											},
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"name": "k",
														"nodeType": "VariableDeclaration",
														"scope": 40,
														"src": "316:7:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 32,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "316:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 37,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 34,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 35,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "326:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "316:15:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 38,
													"name": "k",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 33,
													"src": "349:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 23,
												"id": 39,
												"nodeType": "Return",
												"src": "342:8:0"
											}
										]
									},
									"documentation": null,
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "229:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "253:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 21,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "253:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "252:7:0"
									},
									"scope": 42,
									"src": "216:142:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 43,
							"src": "60:301:0"
						}
					],
					"src": "33:328:0"
				},
				"id": 0
			}
		}
	}
}